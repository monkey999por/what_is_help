
・デザインの垂直分割（HTML,CSSとかの単位）と水平分割（コンポーネント単位）の話はよかった。
・ノーマライズCSS（ブラウザがHTMLタグについて標準で当てるCSS）について知れてよかった。
　⇒例えば、h1, h2とかは実はそれ自体にサイズが一番大きい、二番目に大きいなどのプロパティを持っているわけではなく、
　　ノーマライズCSSによってサイズが決められているだけ。
　　　⇒確かに考えてみるとHTMLは「文書の構造をマークアップ」するもので「スタイルを定義」しない。
https://qiita.com/arowM/items/e1af320e2755461649a0

Pxはあんまり使わず相対的なサイズを使う。emとか

SCSSは変数使えたり構造化できたりがめちゃくちゃいい @useとかも最高
カスタムデータ属性の使い方
アニメーションはCSSでやる方がいいかもって
npm のpercelとかよさそう？webpackのいろいろ自動でやってくれる版




TODO
ベンダープレフィックス？
要素の横並びはflexBox使うらしい
リキッドデザイン？

■HTML要素におけるCSSの有効範囲はここが分かりやすい
https://www.tohoho-web.com/css/basic.htm#TagElementSelector

■適用の優先順位
https://www.tohoho-web.com/css/basic.htm#Priority
・基本的には、id, classが強くて、:とか::とかは弱い。要素指定(p,h1..)とかはかなり弱い
・同じ優先度だと、一つのCSS定義で単純にセレクタの数が多い方が優先度が高くなる。

■継承
親要素に指定されたスタイルの多くは、子要素に継承されます。

■CSSカスケードレイヤ
https://www.tohoho-web.com/ex/css-cascade-layers.html
CSS適用の優先度を変更できる。
CSSには優先度の計算方法があるが、それだと都合が悪いケースがあるので、この機能を使う。